#pragma once

#include <Windows.h>
#include <cstddef>

namespace ext
{
    HANDLE global_heap;

    void init_heap()
    {
        global_heap = HeapCreate(0, 1000, 1000000);
    }

    template <typename T>
    T *alloc(std::size_t length)
    {
        return reinterpret_cast<T *>(HeapAlloc(ext::global_heap, 0, sizeof(T) * length));
    }

    // template <typename T, typename ...ARGS>
    // T *init(ARGS ...args)
    // {
        
    // }

    void free(void *pointer)
    {
        HeapFree(ext::global_heap, 0, pointer);
    }
}