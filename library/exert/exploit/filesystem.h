#pragma once

#include <Windows.h>
#include "../base.h"
#include "string.h"

namespace ext
{
    bool file_has(const string_t &path)
    {
        WIN32_FIND_DATA data;
        handle_t handle = FindFirstFile(path, &data);
        if (INVALID_HANDLE_VALUE != handle)
        {
            return true;
        }
        return false;
    }

    std::size_t file_new(const string_t &path, const string_t &content)
    {
        handle_t handle = CreateFileW(
            path,
            GENERIC_WRITE,
            0,
            0,
            CREATE_ALWAYS,
            FILE_ATTRIBUTE_NORMAL,
            0);
        if (INVALID_HANDLE_VALUE == handle)
        {
            return 0;
        }
        DWORD write_count = 0;
        if (WriteFile(handle, content, content.get_size(), &write_count, nullptr))
        {
            return write_count;
        }
        return 0;
    }

    std::size_t file_put(const string_t &path, const string_t &content)
    {
        if (!file_has(path))
        {
            return file_new(path, content);
        }
        handle_t handle = CreateFileW(
            path,
            GENERIC_WRITE,
            0,
            0,
            OPEN_EXISTING,
            FILE_ATTRIBUTE_NORMAL,
            0);
        if (INVALID_HANDLE_VALUE == handle)
        {
            return 0;
        }
        if (SetFilePointer(handle, 0, nullptr, FILE_END) == -1)
        {
            return 0;
        }
        DWORD write_count = 0;
        if (WriteFile(handle, content, content.get_size(), &write_count, nullptr))
        {
            return write_count;
        }
        return 0;
    }
}